FROM node:lts-alpine as build

ARG FRONTEND_PORT
ARG BACKEND_PORT
ARG FRONTEND_URI
ARG BACKEND_URI
ARG ALLOWED_ORIGINS
ARG AUTH_MESSAGE
ARG AUTH_TOKEN_NAME
ARG SESSION_SECRET
ARG SESSION_MAX_AGE
ARG THIRDWEB_STORAGE_SECRET
ARG NFT_DEFAULT_IMAGE
ARG JWT_SECRET
ARG JWT_ISSUER
ARG JWT_AUDIENCE
ARG JWT_ACCESS_TOKEN_DURATION
ARG PASSWORD_SALT_PREFIX
ARG PASSWORD_SALT_SUFFIX
ARG GOOGLE_OAUTH2_CLIENT_ID
ARG GOOGLE_OAUTH2_CLIENT_SECRET
ARG RABBITMQ_URI
ARG RABBITMQ_EXCHANGE_NAME
ARG PINATA_API_KEY
ARG PINATA_API_SECRET
ARG POSTGRES_USER
ARG POSTGRES_DATABASE
ARG POSTGRES_PASSWORD
ARG DATABASE_PORT
ARG DATABASE_HOST

ENV FRONTEND_PORT=${FRONTEND_PORT}
ENV BACKEND_PORT=${BACKEND_PORT}
ENV FRONTEND_URI=${FRONTEND_URI}
ENV BACKEND_URI=${BACKEND_URI}
ENV ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
ENV AUTH_MESSAGE=${AUTH_MESSAGE}
ENV AUTH_TOKEN_NAME=${AUTH_TOKEN_NAME}
ENV SESSION_SECRET=${SESSION_SECRET}
ENV SESSION_MAX_AGE=${SESSION_MAX_AGE}
ENV THIRDWEB_STORAGE_SECRET=${THIRDWEB_STORAGE_SECRET}
ENV NFT_DEFAULT_IMAGE=${NFT_DEFAULT_IMAGE}
ENV JWT_SECRET=${JWT_SECRET}
ENV JWT_ISSUER=${JWT_ISSUER}
ENV JWT_AUDIENCE=${JWT_AUDIENCE}
ENV JWT_ACCESS_TOKEN_DURATION=${JWT_ACCESS_TOKEN_DURATION}
ENV PASSWORD_SALT_PREFIX=${PASSWORD_SALT_PREFIX}
ENV PASSWORD_SALT_SUFFIX=${PASSWORD_SALT_SUFFIX}
ENV GOOGLE_OAUTH2_CLIENT_ID=${GOOGLE_OAUTH2_CLIENT_ID}
ENV GOOGLE_OAUTH2_CLIENT_SECRET=${GOOGLE_OAUTH2_CLIENT_SECRET}
ENV RABBITMQ_URI=${RABBITMQ_URI}
ENV RABBITMQ_EXCHANGE_NAME=${RABBITMQ_EXCHANGE_NAME}
ENV PINATA_API_KEY=${PINATA_API_KEY}
ENV PINATA_API_SECRET=${PINATA_API_SECRET}
ENV POSTGRES_USER=${POSTGRES_USER}
ENV POSTGRES_DATABASE=${POSTGRES_DATABASE}
ENV POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
ENV DATABASE_PORT=${DATABASE_PORT}
ENV DATABASE_HOST=${DATABASE_HOST}

WORKDIR /app
COPY package*.json ./ 
RUN npm install

COPY . .

CMD npm uninstall bcrypt @types/bcrypt \
&& npm install -D @types/bcrypt \
&& npm install bcrypt

RUN npm run build


FROM node:lts-alpine

ENV NODE_ENV=production
WORKDIR /app

COPY --from=build /app/dist /app/dist
COPY --from=build /app/node_modules /app/node_modules
COPY --from=build /app/package.json /app/package.json

EXPOSE 8000
CMD npm run database:migration:run && npm run prod