FROM node:lts-alpine as build

ARG FRONTEND_PORT
ARG BACKEND_PORT
ARG FRONTEND_URI
ARG AUTH_MESSAGE
ARG AUTH_TOKEN_NAME
ARG SESSION_SECRET
ARG SESSION_MAX_AGE
ARG THIRDWEB_STORAGE_SECRET
ARG NFT_DEFAULT_IMAGE
ARG POSTGRES_USER
ARG POSTGRES_DATABASE
ARG POSTGRES_PASSWORD
ARG DATABASE_PORT
ARG DATABASE_HOST

ENV FRONTEND_PORT=${FRONTEND_PORT}
ENV BACKEND_PORT=${BACKEND_PORT}
ENV FRONTEND_URI=${FRONTEND_URI}
ENV AUTH_MESSAGE=${AUTH_MESSAGE}
ENV AUTH_TOKEN_NAME=${AUTH_TOKEN_NAME}
ENV SESSION_SECRET=${SESSION_SECRET}
ENV SESSION_MAX_AGE=${SESSION_MAX_AGE}
ENV THIRDWEB_STORAGE_SECRET=${THIRDWEB_STORAGE_SECRET}
ENV NFT_DEFAULT_IMAGE=${NFT_DEFAULT_IMAGE}
ENV POSTGRES_USER=${POSTGRES_USER}
ENV POSTGRES_DATABASE=${POSTGRES_DATABASE}
ENV POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
ENV DATABASE_PORT=${DATABASE_PORT}
ENV DATABASE_HOST=${DATABASE_HOST}

WORKDIR /app
COPY package*.json ./ 
RUN npm install

COPY . .

CMD npm uninstall bcrypt @types/bcrypt \
&& npm install -D @types/bcrypt \
&& npm install bcrypt

RUN npm run build


FROM node:lts-alpine

ENV NODE_ENV=production
WORKDIR /app

COPY --from=build /app/dist /app/dist
COPY --from=build /app/node_modules /app/node_modules
COPY --from=build /app/package.json /app/package.json

EXPOSE 8000
CMD npm run database:migration:run && npm run prod