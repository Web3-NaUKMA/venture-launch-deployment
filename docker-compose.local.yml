version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile.local
    container_name: venture-launch-frontend
    networks:
      - venture-launch-network
    env_file: ./.env.local
    ports:
      - ${DOCKER_FRONTEND_PORT}:80
    volumes:
      - ./frontend/src:/app/src
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: ./Dockerfile.local
    container_name: venture-launch-backend
    networks:
      - venture-launch-network
    env_file: ./.env.local
    ports:
      - ${DOCKER_BACKEND_PORT}:80
    volumes:
      - ./backend/src:/app/src
    depends_on:
      - database

  database:
    image: postgres:latest
    container_name: venture-launch-database
    networks:
      - venture-launch-network
    env_file: ./.env.local
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    expose:
      - 5432
    volumes:
      - database_data:/var/lib/postgresql/data
    restart: on-failure

  nginx:
    image: nginx:1.15-alpine
    container_name: venture-launch-nginx
    networks:
      - venture-launch-network
    env_file: ./.env.local
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/default.local.conf:/etc/nginx/conf.d/default.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    expose:
      - ${NGINX_PORT}
    depends_on:
      - frontend
      - backend
    restart: on-failure

  certbot:
    image: certbot/certbot
  volumes:
    - ./data/certbot/conf:/etc/letsencrypt
    - ./data/certbot/www:/var/www/certbot

networks:
  venture-launch-network:
    driver: bridge

volumes:
  database_data:
