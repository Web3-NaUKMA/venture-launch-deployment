services:
  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile.local
    container_name: venture-launch-frontend
    networks:
      - venture-launch-network
    env_file: ./.env.local
    ports:
      - ${INTERNAL_FRONTEND_PORT}:3000
    volumes:
      - ./frontend/src:/app/src
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: ./Dockerfile.local
    container_name: venture-launch-backend
    networks:
      - venture-launch-network
    env_file: ./.env.local
    ports:
      - ${INTERNAL_BACKEND_PORT}:8000
    volumes:
      - ./backend/src:/app/src
    depends_on:
      - database

  database:
    image: postgres:latest
    container_name: venture-launch-database
    networks:
      - venture-launch-network
    env_file: ./.env.local
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    expose:
      - ${INTERNAL_DATABASE_PORT}
    volumes:
      - database_data:/var/lib/postgresql/data
    restart: on-failure

  nginx:
    image: nginx:latest
    container_name: venture-launch-nginx
    networks:
      - venture-launch-network
    env_file: ./.env.local
    ports:
      - ${INTERNAL_NGINX_PORT}:80
    volumes:
      - ./nginx/default.local.conf:/etc/nginx/conf.d/default.conf
    expose:
      - ${INTERNAL_NGINX_PORT}
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

networks:
  venture-launch-network:
    driver: bridge

volumes:
  database_data:
